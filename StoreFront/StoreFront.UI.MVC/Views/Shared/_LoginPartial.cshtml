@using Microsoft.AspNet.Identity
@using StoreFront.DATA.EF;

@{ 

    string currentUserId = User.Identity.GetUserId();
    //retrieve the associated user details
    Store_FrontEntities ctx = new Store_FrontEntities();
    UserDetail ud = ctx.UserDetails.Where(u => u.UserID == currentUserId).FirstOrDefault(); //.Single() does NOT allow null values

}

@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <div class="nav navbar-nav navbar-right" style="color:white">
        <div>@Html.ActionLink("Join Now", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</div>
    </div>
    <div class="nav navbar-nav navbar-right">
        <div>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</div>
    </div>
}
